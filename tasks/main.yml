---
# tasks file for ansible-role-backup
- name: Install packages
  package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - python-setuptools
      - restic

- name: Ensure mount-dest paths are presents 
  file: 
    path: "{{  backup_dest }}"
    state: directory

- name: Set restic_repo fact
  set_fact:
    restic_backupRepository: "{{ backup_dest }}"

- name: Check if backup-repo exists
  stat:
    path: "{{ restic_backupRepository }}"
  register: stat_results
  ignore_errors: true

- name: Ensure backup directory for host exists
  file: 
    path: "{{ restic_backupRepository }}" 
    state: directory

- name: Init backup repo
  shell: |
    restic init --repo "{{ restic_backupRepository }}"
  environment:
    RESTIC_PASSWORD: "{{ restic_password }}"
  when: not stat_results.stat.exists  

- name: Make sure pymysql is present
  pip:
    name: pymysql
    state: present

- name: Ensure backup-user exists
  mysql_user:
    login_user: "{{ mysql_admin_user }}"
    login_password: "{{ mysql_admin_password }}"
    name: "{{ mysql_backupUser }}"
    password: "{{ mysql_backupPassword }}"
    priv: '*.*:SELECT,SHOW VIEW,LOCK TABLES,RELOAD,REPLICATION CLIENT'
    state: present

- name: Create backup-script
  template: 
    src: backup-ng.sh
    dest: "/{{ cronjob_user }}/backup-ng.sh"
    owner: root
    group: root
    mode: "0700"

- name: Create dump-destination for mysql backups
  file: 
    path: "{{ mysql_dumpDestination }}"
    state: directory

- name: Install backup cronjob
  cron: 
    name: Create backup
    user: "{{ cronjob_user }}"
    minute: "0"
    hour: "{{ backup_hour }}" 
    job: "/{{ cronjob_user }}/backup-ng.sh"
    cron_file: backup